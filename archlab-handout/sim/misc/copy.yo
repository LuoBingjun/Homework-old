                      | # 骆炳君 软件71 2017013573
                      | 
  0x000:              | .pos 0 
                      | # init
  0x000: 30f400020000 | irmovl Stack, %esp
  0x006: 2045         | rrmovl %esp, %ebp
  0x008: 30f203000000 | irmovl $3, %edx
  0x00e: a02f         | pushl %edx
  0x010: 30f234000000 | irmovl dest, %edx
  0x016: a02f         | pushl %edx
  0x018: 30f228000000 | irmovl src, %edx
  0x01e: a02f         | pushl %edx
  0x020: 8040000000   | call copy_block
  0x025: 00           | halt
                      | 
  0x028:              | .align 4 
                      | # Source block 
  0x028:              | src: 
  0x028: 0a000000     | 	.long 0x00a 
  0x02c: b0000000     | 	.long 0x0b0 
  0x030: 000c0000     | 	.long 0xc00 
                      | # Destination block 
  0x034:              | dest: 
  0x034: 11010000     | 	.long 0x111 
  0x038: 22020000     | 	.long 0x222 
  0x03c: 33030000     | 	.long 0x333 
                      | 
  0x040:              | copy_block:
  0x040: a05f         | 	pushl   %ebp            # set stack pointers
  0x042: 2045         | 	rrmovl  %esp, %ebp
  0x044: a06f         |     pushl   %esi			# save %esi
  0x046: a07f         |     pushl   %edi			# save %edi
  0x048: 507508000000 | 	mrmovl  8(%ebp), %edi	# get *src(%edi)
  0x04e: 50650c000000 |     mrmovl  12(%ebp), %esi	# get *dest(%esi)
  0x054: 502510000000 |     mrmovl  16(%ebp), %edx	# get len(%edx)
  0x05a: 30f100000000 | 	irmovl	$0, %ecx		# result
  0x060: 6222         | 	andl	%edx, %edx		# len > 0?
  0x062: 718e000000   | 	jle	L15					# return when len <= 0
  0x067:              | L13:						# loop
  0x067: 500700000000 | 	mrmovl	(%edi), %eax	# get *src(%eax)
  0x06d: 30f304000000 |     irmovl  $4, %ebx
  0x073: 6037         | 	addl	%ebx, %edi		# src++
  0x075: 400600000000 | 	rmmovl	%eax, (%esi)	# *dest = *src
  0x07b: 6036         | 	addl	%ebx, %esi		# dest++
  0x07d: 6301         | 	xorl	%eax, %ecx		# result ^= val
  0x07f: 30f3ffffffff |     irmovl  $-1, %ebx
  0x085: 6032         | 	addl	%ebx, %edx		# len--
  0x087: 6222         | 	andl	%edx, %edx		# len > 0?
  0x089: 7667000000   | 	jg	L13					# continue when len > 0
  0x08e:              | L15:						# return
  0x08e: 2010         | 	rrmovl	%ecx, %eax		# set data to be return
  0x090: b07f         |     popl    %edi			# restore %edi 
  0x092: b06f         |     popl    %esi			# restore %esi 
  0x094: 2054         |     rrmovl  %ebp, %esp	    # restore stack pointers
  0x096: b05f         | 	popl    %ebp
  0x098: 90           | 	ret
                      | 
  0x200:              | .pos 0x200
  0x200:              | Stack:
