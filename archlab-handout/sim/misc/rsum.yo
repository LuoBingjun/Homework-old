                      | # 骆炳君 软件71 2017013573
                      | 
  0x000:              | .pos 0
                      | # init
  0x000: 30f400020000 | irmovl Stack, %esp
  0x006: 2045         | rrmovl %esp, %ebp
  0x008: 30f218000000 | irmovl ele1, %edx
  0x00e: a02f         | pushl %edx
  0x010: 8030000000   | call rsum_list
  0x015: 00           | halt
                      | 
                      | # Sample linked list
  0x018:              | .align 4
  0x018:              | ele1:
  0x018: 0a000000     | 	.long 0x00a
  0x01c: 20000000     | 	.long ele2
  0x020:              | ele2:
  0x020: b0000000     | 	.long 0x0b0
  0x024: 28000000     | 	.long ele3
  0x028:              | ele3:
  0x028: 000c0000     | 	.long 0xc00
  0x02c: 00000000     | 	.long 0
                      | 
  0x030:              | rsum_list:
  0x030: a05f         |     pushl   %ebp		    # set stack pointer
  0x032: 2045         | 	rrmovl  %esp, %ebp
  0x034: 502508000000 |     mrmovl  8(%ebp), %edx	# get ls(%edx)
  0x03a: 30f000000000 |     irmovl	$0, %eax		# set val(%eax) = 0
  0x040: 6222         | 	andl	%edx, %edx		# ls == 0?
  0x042: 744c000000   | 	jne	    L13				# continue when ls != 0
                      | 	# return 0 when ls == 0
  0x047: 2054         |     rrmovl  %ebp, %esp	    # restore stack pointer
  0x049: b05f         | 	popl    %ebp
  0x04b: 90           | 	ret
  0x04c:              | L13:
  0x04c: a03f         | 	pushl	%ebx			# save %ebx
  0x04e: 2023         | 	rrmovl	%edx, %ebx
  0x050: 502204000000 | 	mrmovl	4(%edx), %edx	# get ls->next(%edx)
  0x056: a02f         |     pushl   %edx			# push the parameter
  0x058: 8030000000   | 	call	rsum_list
  0x05d: b02f         |     popl    %edx			# pop the parameter
  0x05f: 501300000000 |     mrmovl  (%ebx), %ecx	# get ls->value(%ecx)
  0x065: 6010         | 	addl	%ecx, %eax		# get val + rest
  0x067: b03f         | 	popl	%ebx			# restore %ebx
  0x069: 2054         |     rrmovl  %ebp, %esp	    # restore stack pointer
  0x06b: b05f         | 	popl    %ebp
  0x06d: 90           | 	ret
                      | 
  0x200:              | .pos 0x200
  0x200:              | Stack:
